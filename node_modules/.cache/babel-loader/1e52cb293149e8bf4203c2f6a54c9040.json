{"remainingRequest":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\thread-loader\\dist\\cjs.js!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\babel-loader\\lib\\index.js!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\bp-vuejs-dropdown\\Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\bp-vuejs-dropdown\\Dropdown.vue","mtime":1515005924000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'bp-vuejs-dropdown',\n  props: {\n    role: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    unscroll: {\n      type: [HTMLElement, String],\n      required: false,\n      default: null\n    },\n    align: {\n      type: String,\n      required: false,\n      default: 'bottom'\n    },\n    x: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    y: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    beforeOpen: {\n      type: Function,\n      required: false,\n      default: resolve => resolve()\n    },\n    trigger: {\n      type: String,\n      required: false,\n      default: 'click'\n    },\n    closeOnClick: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    isIcon: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    className: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n\n  data() {\n    return {\n      isHidden: true,\n      isLoading: false,\n      id: null,\n      timeout: null,\n      top: undefined,\n      right: undefined,\n      bottom: undefined,\n      left: undefined,\n      width: undefined\n    };\n  },\n\n  watch: {\n    isHidden(isHidden) {\n      if (this.unscroll) {\n        const el = this.unscroll instanceof HTMLElement ? this.unscroll : document.querySelector(this.unscroll);\n\n        if (el) {\n          el.style.overflow = !isHidden ? 'hidden' : '';\n        }\n      }\n    }\n\n  },\n\n  created() {\n    const $root = this.$root; // --- hide dropdown if other dropdowns show\n    // --- or document clicked\n\n    $root.$on('bp-dropdown:open', () => this.isHidden = true);\n    $root.$on('bp-dropdown:hide', () => this.isHidden = true); // --- hide dropdown on document click event\n\n    if (this.trigger === 'click' && !$root['is-bp-dropdown']) {\n      Object.defineProperty($root, 'is-bp-dropdown', {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: true\n      });\n\n      document.onmousedown = e => {\n        const target = e.target;\n        const dropdown = target.closest('.bp-dropdown__btn') || target.closest('.bp-dropdown__body');\n\n        if (!dropdown) {\n          $root.$emit('bp-dropdown:hide');\n        }\n      };\n    }\n\n    this.id = 'bp-dropdown-' + this.generateRandomId();\n  },\n\n  methods: {\n    // --- generate random id for query selector\n    generateRandomId() {\n      return Math.random().toString(36).substr(2, 10);\n    },\n\n    _onToggle(e) {\n      if (this.trigger !== 'click') {\n        return;\n      }\n\n      this.checkCustomCallback(e);\n    },\n\n    _onBtnEnter(e) {\n      if (this.trigger !== 'hover' || !this.isHidden) {\n        return;\n      }\n\n      this.checkCustomCallback(e);\n    },\n\n    _onBtnLeave(e) {\n      if (this.trigger !== 'hover') {\n        return;\n      }\n\n      if (this.role) {\n        this.timeout = setTimeout(() => this.isHidden = true, 100);\n      }\n\n      const to = e.toElement;\n\n      if (!to) {\n        return;\n      }\n\n      const isDropdown = to.closest('.bp-dropdown__btn') || to.closest('.bp-dropdown__body');\n\n      if (isDropdown) {\n        return;\n      }\n\n      this.prepare();\n    },\n\n    _onBodyClick() {\n      if (this.closeOnClick) {\n        this.isHidden = true;\n      }\n    },\n\n    _onBodyEnter() {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n    },\n\n    _onBodyLeave(e) {\n      if (this.trigger !== 'hover') {\n        return;\n      }\n\n      const to = e.toElement;\n\n      if (!to) {\n        return;\n      }\n\n      if (to.closest('.bp-dropdown__btn') || to.closest('.bp-dropdown__sub')) {\n        return;\n      }\n\n      this.prepare();\n    },\n\n    checkCustomCallback(e) {\n      if (!this.isHidden) {\n        this.prepare();\n        return;\n      } // --- custom callback before open\n\n\n      const promise = new Promise(resolve => {\n        this.isLoading = true;\n        this.beforeOpen.call(this, resolve);\n      });\n      promise.then(() => {\n        this.isLoading = false;\n\n        if (!e.target.closest('.bp-dropdown__body')) {\n          // --- hide dropdown if other dropdowns show\n          this.$root.$emit('bp-dropdown:open');\n        }\n\n        setTimeout(this.prepare, 0);\n      });\n      promise.catch(() => {\n        throw Error('bp-dropdown promise error');\n      });\n    },\n\n    prepare() {\n      this.isHidden = !this.isHidden;\n\n      if (!this.isHidden) {\n        this.$nextTick(() => {\n          const button = this.$el.firstElementChild;\n          const container = document.getElementById(this.id);\n          this.setWidth(button.offsetWidth);\n          this.setPosition(button, container);\n        });\n      }\n    },\n\n    setWidth(width) {\n      this.width = width;\n    },\n\n    setPosition(btn, body) {\n      if (!btn || !body) {\n        return;\n      }\n\n      const coords = this.getCoords(btn); // --- current position\n\n      const currentTop = coords.top;\n      const currentLeft = coords.left; // --- btn size\n\n      const btnWidth = btn.offsetWidth;\n      const btnHeight = btn.offsetHeight; // --- body size\n\n      const bodyWidth = body.offsetWidth;\n      const bodyHeight = body.offsetHeight;\n\n      switch (this.align) {\n        case 'top':\n          this.top = currentTop + pageYOffset - bodyHeight;\n          this.left = currentLeft + pageXOffset;\n          break;\n\n        case 'right':\n          this.top = currentTop + pageYOffset;\n          this.left = currentLeft + pageXOffset + btnWidth;\n          break;\n\n        case 'bottom':\n          this.top = currentTop + pageYOffset + btnHeight;\n          this.left = currentLeft + pageXOffset;\n          break;\n\n        case 'left':\n          this.top = currentTop + pageYOffset;\n          this.left = currentLeft + pageXOffset - bodyWidth;\n          break;\n\n        default:\n          this.top = currentTop + pageYOffset + btnHeight;\n          this.left = currentLeft + pageXOffset;\n          break;\n      }\n\n      this.top += this.y;\n      this.left += this.x;\n    },\n\n    getCoords(el) {\n      el = el.getBoundingClientRect();\n      return {\n        top: el.top - pageYOffset,\n        left: el.left - pageXOffset\n      };\n    }\n\n  }\n};",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"bp-dropdown\" :class=\"{ className, 'bp-dropdown--sub': role }\">\n    <span :class=\"{ [`bp-dropdown__${(role) ? 'sub' : 'btn'}`]: true, [`bp-dropdown__${(role) ? 'sub' : 'btn'}--active`]: !isHidden, [`${className}-bp__btn`]: className, [`${className}-bp__btn--active`]: !isHidden }\"\n          @click=\"_onToggle\"\n          @mouseenter=\"_onBtnEnter\"\n          @mouseleave=\"_onBtnLeave\">\n      <slot name=\"btn\"></slot>\n      <slot name=\"icon\" v-if=\"isIcon\">\n        <svg v-if=\"isLoading\"\n             class=\"bp-dropdown__icon bp-dropdown__icon--spin\"\n             viewBox=\"0 0 512 512\">\n          <path fill=\"currentColor\" d=\"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"></path>\n        </svg>\n        <svg v-else\n             class=\"bp-dropdown__icon\"\n             :class=\"{ [`bp-dropdown__icon--${align}`]: align }\"\n             viewBox=\"0 0 256 512\">\n            <path fill=\"currentColor\" d=\"M119.5 326.9L3.5 209.1c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0L128 287.3l100.4-102.2c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L136.5 327c-4.7 4.6-12.3 4.6-17-.1z\"></path>\n        </svg>\n      </slot>\n    </span>\n        <transition name=\"fade\">\n            <div v-if=\"!isHidden\"\n                 class=\"bp-dropdown__body\"\n                 :id=\"id\"\n                 :style=\"{ minWidth: `${width}px`, top: `${top}px`, left: `${left}px` }\"\n                 :class=\"{ [`${className}-bp__body`]: className }\"\n                 @click=\"_onBodyClick\"\n                 @mouseenter=\"_onBodyEnter\"\n                 @mouseleave=\"_onBodyLeave\">\n                <slot name=\"body\"></slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'bp-vuejs-dropdown',\n\n        props: {\n            role: {\n                type: String,\n                required: false,\n                default: ''\n            },\n\n            unscroll: {\n                type: [HTMLElement, String],\n                required: false,\n                default: null\n            },\n\n            align: {\n                type: String,\n                required: false,\n                default: 'bottom'\n            },\n\n            x: {\n                type: Number,\n                required: false,\n                default: 0\n            },\n\n            y: {\n                type: Number,\n                required: false,\n                default: 0\n            },\n\n            beforeOpen: {\n                type: Function,\n                required: false,\n                default: resolve => resolve()\n            },\n\n            trigger: {\n                type: String,\n                required: false,\n                default: 'click'\n            },\n\n            closeOnClick: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n\n            isIcon: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n\n            className: {\n                type: String,\n                required: false,\n                default: ''\n            },\n        },\n\n        data() {\n            return {\n                isHidden: true,\n                isLoading: false,\n\n                id: null,\n                timeout: null,\n\n                top: undefined,\n                right: undefined,\n                bottom: undefined,\n                left: undefined,\n                width: undefined\n            }\n        },\n\n        watch: {\n            isHidden(isHidden) {\n                if (this.unscroll) {\n                    const el = (this.unscroll instanceof HTMLElement) ?\n                        this.unscroll : document.querySelector(this.unscroll);\n\n                    if (el) {\n                        el.style.overflow = (!isHidden) ? 'hidden' : '';\n                    }\n                }\n            }\n        },\n\n        created() {\n            const $root = this.$root;\n\n            // --- hide dropdown if other dropdowns show\n            // --- or document clicked\n            $root.$on('bp-dropdown:open', () => this.isHidden = true);\n            $root.$on('bp-dropdown:hide', () => this.isHidden = true);\n\n            // --- hide dropdown on document click event\n            if (this.trigger === 'click' && !$root['is-bp-dropdown']) {\n                Object.defineProperty($root, 'is-bp-dropdown', {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: true\n                });\n\n                document.onmousedown = (e) => {\n                    const target = e.target;\n                    const dropdown = target.closest('.bp-dropdown__btn') || target.closest('.bp-dropdown__body');\n\n                    if (!dropdown) {\n                        $root.$emit('bp-dropdown:hide');\n                    }\n                }\n            }\n\n            this.id = 'bp-dropdown-' + this.generateRandomId();\n        },\n\n        methods: {\n            // --- generate random id for query selector\n            generateRandomId() {\n                return Math.random().toString(36).substr(2, 10);\n            },\n\n            _onToggle(e) {\n                if (this.trigger !== 'click') {\n                    return;\n                }\n\n                this.checkCustomCallback(e);\n            },\n\n            _onBtnEnter(e) {\n                if (this.trigger !== 'hover' || !this.isHidden) {\n                    return;\n                }\n\n                this.checkCustomCallback(e);\n            },\n\n            _onBtnLeave(e) {\n                if (this.trigger !== 'hover') {\n                    return;\n                }\n\n                if (this.role) {\n                    this.timeout = setTimeout(() => this.isHidden = true, 100);\n                }\n\n                const to = e.toElement;\n                if (!to) {\n                    return;\n                }\n\n                const isDropdown = to.closest('.bp-dropdown__btn') || to.closest('.bp-dropdown__body');\n                if (isDropdown) {\n                    return;\n                }\n\n                this.prepare();\n            },\n\n            _onBodyClick() {\n                if (this.closeOnClick) {\n                    this.isHidden = true;\n                }\n            },\n\n            _onBodyEnter() {\n                if (this.timeout) {\n                    clearTimeout(this.timeout);\n                }\n            },\n\n            _onBodyLeave(e) {\n                if (this.trigger !== 'hover') {\n                    return;\n                }\n\n                const to = e.toElement;\n                if (!to) {\n                    return;\n                }\n\n                if (to.closest('.bp-dropdown__btn') || to.closest('.bp-dropdown__sub')) {\n                    return;\n                }\n\n                this.prepare();\n            },\n\n            checkCustomCallback(e) {\n                if (!this.isHidden) {\n                    this.prepare();\n                    return;\n                }\n\n                // --- custom callback before open\n                const promise = new Promise(resolve => {\n                    this.isLoading = true;\n                    this.beforeOpen.call(this, resolve);\n                });\n\n                promise.then(() => {\n                    this.isLoading = false;\n                    if (!e.target.closest('.bp-dropdown__body')) {\n                        // --- hide dropdown if other dropdowns show\n                        this.$root.$emit('bp-dropdown:open');\n                    }\n\n                    setTimeout(this.prepare, 0);\n                });\n\n                promise.catch(() => { throw Error('bp-dropdown promise error') });\n            },\n\n            prepare() {\n                this.isHidden = !this.isHidden;\n                if (!this.isHidden) {\n                    this.$nextTick(() => {\n                        const button = this.$el.firstElementChild;\n                        const container = document.getElementById(this.id);\n\n                        this.setWidth(button.offsetWidth);\n                        this.setPosition(button, container);\n                    });\n                }\n            },\n\n            setWidth(width) {\n                this.width = width;\n            },\n\n            setPosition(btn, body) {\n                if (!btn || !body) {\n                    return;\n                }\n\n                const coords = this.getCoords(btn);\n\n                // --- current position\n                const currentTop = coords.top;\n                const currentLeft = coords.left;\n\n                // --- btn size\n                const btnWidth = btn.offsetWidth;\n                const btnHeight = btn.offsetHeight;\n\n                // --- body size\n                const bodyWidth = body.offsetWidth;\n                const bodyHeight = body.offsetHeight;\n\n                switch(this.align) {\n                    case 'top':\n                        this.top = (currentTop + pageYOffset - bodyHeight);\n                        this.left = (currentLeft + pageXOffset);\n                        break;\n                    case 'right':\n                        this.top = (currentTop + pageYOffset);\n                        this.left = (currentLeft + pageXOffset + btnWidth);\n                        break;\n                    case 'bottom':\n                        this.top = (currentTop + pageYOffset + btnHeight);\n                        this.left = (currentLeft + pageXOffset);\n                        break;\n                    case 'left':\n                        this.top = (currentTop + pageYOffset);\n                        this.left = (currentLeft + pageXOffset - bodyWidth);\n                        break;\n                    default:\n                        this.top = (currentTop + pageYOffset + btnHeight);\n                        this.left = (currentLeft + pageXOffset);\n                        break;\n                }\n\n                this.top += this.y;\n                this.left += this.x;\n            },\n\n            getCoords(el) {\n                el = el.getBoundingClientRect();\n                return {\n                    top: el.top - pageYOffset,\n                    left: el.left - pageXOffset\n                };\n            }\n        }\n    }\n</script>\n\n<style>\n    .bp-dropdown--sub {\n        width: 100%;\n    }\n\n    .bp-dropdown--sub .bp-dropdown__btn,\n    .bp-dropdown--sub .bp-dropdown__sub {\n        width: 100%;\n    }\n\n    .bp-dropdown--sub .bp-dropdown__icon {\n        margin-left: auto;\n    }\n\n    .bp-dropdown__btn {\n        display: inline-flex;\n        align-items: center;\n        padding: 3px 5px;\n        border: 1px solid #efefef;\n        cursor: pointer;\n        transition: background-color .1s ease;\n    }\n\n    .bp-dropdown__sub {\n        display: inline-flex;\n        align-items: center;\n    }\n\n    .bp-dropdown__btn--active {\n        background-color: #eee;\n    }\n\n    .bp-dropdown__icon {\n        display: inline-block;\n        width: 15px;\n        height: 15px;\n        overflow: visible;\n        transition: transform .1s ease;\n    }\n\n    .bp-dropdown__icon--spin {\n        width: 12px;\n        height: 12px;\n        animation: spin 2s infinite linear;\n    }\n\n    .bp-dropdown__icon--top {\n        transform: rotate(-180deg);\n    }\n\n    .bp-dropdown__icon--right {\n        transform: rotate(-90deg);\n    }\n\n    .bp-dropdown__icon--bottom {\n        transform: rotate(0);\n    }\n\n    .bp-dropdown__icon--left {\n        transform: rotate(-270deg);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--top,\n    .bp-dropdown__sub--active .bp-dropdown__icon--top {\n        transform: rotate(0);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--right,\n    .bp-dropdown__sub--active .bp-dropdown__icon--right {\n        transform: rotate(-270deg);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--bottom,\n    .bp-dropdown__sub--active .bp-dropdown__icon--bottom {\n        transform: rotate(-180deg);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--left,\n    .bp-dropdown__sub--active .bp-dropdown__icon--left {\n        transform: rotate(-90deg);\n    }\n\n    .bp-dropdown__body {\n        position: fixed;\n        top: 0;\n        left: 0;\n        padding: 6px 8px;\n        background-color: #fff;\n        box-shadow: 0 5px 15px -5px rgba(0, 0, 0, .5);\n        z-index: 9999;\n    }\n\n    .fade-enter-active, .fade-leave-active {\n        transition: opacity .1s;\n    }\n\n    .fade-enter, .fade-leave-to {\n        opacity: 0;\n    }\n\n    @keyframes spin {\n        0% {\n            transform:rotate(0)\n        }\n        100% {\n            transform:rotate(360deg)\n        }\n    }\n</style>\n"],"sourceRoot":"node_modules/bp-vuejs-dropdown"}]}