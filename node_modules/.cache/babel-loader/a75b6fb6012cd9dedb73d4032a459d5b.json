{"remainingRequest":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\babel-loader\\lib\\index.js!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-dropdowns\\Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-dropdowns\\Dropdown.vue","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data() {\n    return {\n      selectedOption: {\n        name: ''\n      },\n      showMenu: false,\n      placeholderText: 'Please select an item'\n    };\n  },\n\n  props: {\n    options: {\n      type: [Array, Object]\n    },\n    selected: {},\n    placeholder: [String],\n    closeOnOutsideClick: {\n      type: [Boolean],\n      default: true\n    }\n  },\n\n  mounted() {\n    this.selectedOption = this.selected;\n\n    if (this.placeholder) {\n      this.placeholderText = this.placeholder;\n    }\n\n    if (this.closeOnOutsideClick) {\n      document.addEventListener('click', this.clickHandler);\n    }\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('click', this.clickHandler);\n  },\n\n  methods: {\n    updateOption(option) {\n      this.selectedOption = option;\n      this.showMenu = false;\n      this.$emit('updateOption', this.selectedOption);\n    },\n\n    toggleMenu() {\n      this.showMenu = !this.showMenu;\n    },\n\n    clickHandler(event) {\n      const {\n        target\n      } = event;\n      const {\n        $el\n      } = this;\n\n      if (!$el.contains(target)) {\n        this.showMenu = false;\n      }\n    }\n\n  }\n};",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAA;AACA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,cAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OADA;AAIA,MAAA,QAAA,EAAA,KAJA;AAKA,MAAA,eAAA,EAAA;AALA,KAAA;AAOA,GATA;;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,KAAA,EAAA,MAAA;AADA,KADA;AAIA,IAAA,QAAA,EAAA,EAJA;AAKA,IAAA,WAAA,EAAA,CAAA,MAAA,CALA;AAMA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,OAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA;AANA,GAVA;;AAsBA,EAAA,OAAA,GAAA;AACA,SAAA,cAAA,GAAA,KAAA,QAAA;;AACA,QAAA,KAAA,WAAA,EACA;AACA,WAAA,eAAA,GAAA,KAAA,WAAA;AACA;;AAEA,QAAA,KAAA,mBAAA,EAAA;AACA,MAAA,QAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,YAAA;AACA;AACA,GAhCA;;AAkCA,EAAA,aAAA,GAAA;AACA,IAAA,QAAA,CAAA,mBAAA,CAAA,OAAA,EAAA,KAAA,YAAA;AACA,GApCA;;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,CAAA,MAAA,EAAA;AACA,WAAA,cAAA,GAAA,MAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,cAAA;AACA,KALA;;AAOA,IAAA,UAAA,GAAA;AACA,WAAA,QAAA,GAAA,CAAA,KAAA,QAAA;AACA,KATA;;AAWA,IAAA,YAAA,CAAA,KAAA,EAAA;AACA,YAAA;AAAA,QAAA;AAAA,UAAA,KAAA;AACA,YAAA;AAAA,QAAA;AAAA,UAAA,IAAA;;AAEA,UAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA;AACA;;AAlBA;AAtCA,CAAA","sourcesContent":["<template>\n    <div class=\"btn-group\">\n        <li @click=\"toggleMenu()\" class=\"dropdown-toggle\" v-if=\"selectedOption.name !== undefined\">\n          {{ selectedOption.name }}\n          <span class=\"caret\"></span>\n        </li>\n\n        <li @click=\"toggleMenu()\" class=\"dropdown-toggle dropdown-toggle-placeholder\" v-if=\"selectedOption.name === undefined\">\n          {{placeholderText}}\n          <span class=\"caret\"></span>\n        </li>\n\n        <ul class=\"dropdown-menu\" v-if=\"showMenu\">\n            <li v-for=\"(option, idx) in options\" :key=\"idx\">\n                <a href=\"javascript:void(0)\" @click=\"updateOption(option)\">\n                    {{ option.name }}\n                </a>\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                selectedOption: {\n                  name: '',\n                },\n                showMenu: false,\n                placeholderText: 'Please select an item',\n            }\n        },\n        props: {\n            options: {\n                type: [Array, Object]\n            },\n            selected: {},\n            placeholder: [String],\n            closeOnOutsideClick: {\n              type: [Boolean],\n              default: true,\n            },\n        },\n\n        mounted() {\n            this.selectedOption = this.selected;\n            if (this.placeholder)\n            {\n                this.placeholderText = this.placeholder;\n            }\n\n            if (this.closeOnOutsideClick) {\n              document.addEventListener('click', this.clickHandler);\n            }\n        },\n\n        beforeDestroy() {\n            document.removeEventListener('click', this.clickHandler);\n        },\n\n        methods: {\n            updateOption(option) {\n                this.selectedOption = option;\n                this.showMenu = false;\n                this.$emit('updateOption', this.selectedOption);\n            },\n\n            toggleMenu() {\n              this.showMenu = !this.showMenu;\n            },\n\n            clickHandler(event) {\n                const { target } = event;\n                const { $el } = this;\n\n                if (!$el.contains(target)) {\n                  this.showMenu = false;\n                }\n            },\n        }\n    }\n</script>\n\n<style>\n\n.btn-group {\n  min-width: 160px;\n  height: 40px;\n  position: relative;\n  margin: 10px 1px;\n  display: inline-block;\n  vertical-align: middle;\n}\n.btn-group a:hover {\n  text-decoration: none;\n}\n\n.dropdown-toggle {\n  color: #636b6f;\n  min-width: 160px;\n  padding: 10px 20px 10px 10px;\n  text-transform: none;\n  font-weight: 300;\n  margin-bottom: 7px;\n  border: 0;\n  background-image: linear-gradient(#009688, #009688), linear-gradient(#D2D2D2, #D2D2D2);\n  background-size: 0 2px, 100% 1px;\n  background-repeat: no-repeat;\n  background-position: center bottom, center calc(100% - 1px);\n  background-color: transparent;\n  transition: background 0s ease-out;\n  float: none;\n  box-shadow: none;\n  border-radius: 0;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.dropdown-toggle:hover {\n  background: #e1e1e1;\n  cursor: pointer;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  float: left;\n  min-width: 160px;\n  padding: 5px 0;\n  margin: 2px 0 0;\n  list-style: none;\n  font-size: 14px;\n  text-align: left;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  background-clip: padding-box;\n}\n\n.dropdown-menu > li > a {\n  padding: 10px 30px;\n  display: block;\n  clear: both;\n  font-weight: normal;\n  line-height: 1.6;\n  color: #333333;\n  white-space: nowrap;\n  text-decoration: none;\n}\n.dropdown-menu > li > a:hover {\n  background: #efefef;\n  color: #409FCB;\n}\n\n.dropdown-menu > li {\n  overflow: hidden;\n  width: 100%;\n  position: relative;\n  margin: 0;\n}\n\n.caret {\n  width: 0;\n  position: absolute;\n  top: 19px;\n  height: 0;\n  margin-left: -24px;\n  vertical-align: middle;\n  border-top: 4px dashed;\n  border-top: 4px solid \\9;\n  border-right: 4px solid transparent;\n  border-left: 4px solid transparent;\n  right: 10px;\n}\n\nli {\n    list-style: none;\n}\n</style>\n"],"sourceRoot":"node_modules/vue-dropdowns"}]}