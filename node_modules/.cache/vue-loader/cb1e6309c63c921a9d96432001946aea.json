{"remainingRequest":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\bp-vuejs-dropdown\\Dropdown.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\bp-vuejs-dropdown\\Dropdown.vue","mtime":1515005924000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.bp-dropdown--sub {\n    width: 100%;\n}\n\n.bp-dropdown--sub .bp-dropdown__btn,\n.bp-dropdown--sub .bp-dropdown__sub {\n    width: 100%;\n}\n\n.bp-dropdown--sub .bp-dropdown__icon {\n    margin-left: auto;\n}\n\n.bp-dropdown__btn {\n    display: inline-flex;\n    align-items: center;\n    padding: 3px 5px;\n    border: 1px solid #efefef;\n    cursor: pointer;\n    transition: background-color .1s ease;\n}\n\n.bp-dropdown__sub {\n    display: inline-flex;\n    align-items: center;\n}\n\n.bp-dropdown__btn--active {\n    background-color: #eee;\n}\n\n.bp-dropdown__icon {\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    overflow: visible;\n    transition: transform .1s ease;\n}\n\n.bp-dropdown__icon--spin {\n    width: 12px;\n    height: 12px;\n    animation: spin 2s infinite linear;\n}\n\n.bp-dropdown__icon--top {\n    transform: rotate(-180deg);\n}\n\n.bp-dropdown__icon--right {\n    transform: rotate(-90deg);\n}\n\n.bp-dropdown__icon--bottom {\n    transform: rotate(0);\n}\n\n.bp-dropdown__icon--left {\n    transform: rotate(-270deg);\n}\n\n.bp-dropdown__btn--active .bp-dropdown__icon--top,\n.bp-dropdown__sub--active .bp-dropdown__icon--top {\n    transform: rotate(0);\n}\n\n.bp-dropdown__btn--active .bp-dropdown__icon--right,\n.bp-dropdown__sub--active .bp-dropdown__icon--right {\n    transform: rotate(-270deg);\n}\n\n.bp-dropdown__btn--active .bp-dropdown__icon--bottom,\n.bp-dropdown__sub--active .bp-dropdown__icon--bottom {\n    transform: rotate(-180deg);\n}\n\n.bp-dropdown__btn--active .bp-dropdown__icon--left,\n.bp-dropdown__sub--active .bp-dropdown__icon--left {\n    transform: rotate(-90deg);\n}\n\n.bp-dropdown__body {\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 6px 8px;\n    background-color: #fff;\n    box-shadow: 0 5px 15px -5px rgba(0, 0, 0, .5);\n    z-index: 9999;\n}\n\n.fade-enter-active, .fade-leave-active {\n    transition: opacity .1s;\n}\n\n.fade-enter, .fade-leave-to {\n    opacity: 0;\n}\n\n@keyframes spin {\n    0% {\n        transform:rotate(0)\n    }\n    100% {\n        transform:rotate(360deg)\n    }\n}\n",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8UA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropdown.vue","sourceRoot":"node_modules/bp-vuejs-dropdown","sourcesContent":["<template>\n    <div class=\"bp-dropdown\" :class=\"{ className, 'bp-dropdown--sub': role }\">\n    <span :class=\"{ [`bp-dropdown__${(role) ? 'sub' : 'btn'}`]: true, [`bp-dropdown__${(role) ? 'sub' : 'btn'}--active`]: !isHidden, [`${className}-bp__btn`]: className, [`${className}-bp__btn--active`]: !isHidden }\"\n          @click=\"_onToggle\"\n          @mouseenter=\"_onBtnEnter\"\n          @mouseleave=\"_onBtnLeave\">\n      <slot name=\"btn\"></slot>\n      <slot name=\"icon\" v-if=\"isIcon\">\n        <svg v-if=\"isLoading\"\n             class=\"bp-dropdown__icon bp-dropdown__icon--spin\"\n             viewBox=\"0 0 512 512\">\n          <path fill=\"currentColor\" d=\"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"></path>\n        </svg>\n        <svg v-else\n             class=\"bp-dropdown__icon\"\n             :class=\"{ [`bp-dropdown__icon--${align}`]: align }\"\n             viewBox=\"0 0 256 512\">\n            <path fill=\"currentColor\" d=\"M119.5 326.9L3.5 209.1c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0L128 287.3l100.4-102.2c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L136.5 327c-4.7 4.6-12.3 4.6-17-.1z\"></path>\n        </svg>\n      </slot>\n    </span>\n        <transition name=\"fade\">\n            <div v-if=\"!isHidden\"\n                 class=\"bp-dropdown__body\"\n                 :id=\"id\"\n                 :style=\"{ minWidth: `${width}px`, top: `${top}px`, left: `${left}px` }\"\n                 :class=\"{ [`${className}-bp__body`]: className }\"\n                 @click=\"_onBodyClick\"\n                 @mouseenter=\"_onBodyEnter\"\n                 @mouseleave=\"_onBodyLeave\">\n                <slot name=\"body\"></slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'bp-vuejs-dropdown',\n\n        props: {\n            role: {\n                type: String,\n                required: false,\n                default: ''\n            },\n\n            unscroll: {\n                type: [HTMLElement, String],\n                required: false,\n                default: null\n            },\n\n            align: {\n                type: String,\n                required: false,\n                default: 'bottom'\n            },\n\n            x: {\n                type: Number,\n                required: false,\n                default: 0\n            },\n\n            y: {\n                type: Number,\n                required: false,\n                default: 0\n            },\n\n            beforeOpen: {\n                type: Function,\n                required: false,\n                default: resolve => resolve()\n            },\n\n            trigger: {\n                type: String,\n                required: false,\n                default: 'click'\n            },\n\n            closeOnClick: {\n                type: Boolean,\n                required: false,\n                default: false\n            },\n\n            isIcon: {\n                type: Boolean,\n                required: false,\n                default: true\n            },\n\n            className: {\n                type: String,\n                required: false,\n                default: ''\n            },\n        },\n\n        data() {\n            return {\n                isHidden: true,\n                isLoading: false,\n\n                id: null,\n                timeout: null,\n\n                top: undefined,\n                right: undefined,\n                bottom: undefined,\n                left: undefined,\n                width: undefined\n            }\n        },\n\n        watch: {\n            isHidden(isHidden) {\n                if (this.unscroll) {\n                    const el = (this.unscroll instanceof HTMLElement) ?\n                        this.unscroll : document.querySelector(this.unscroll);\n\n                    if (el) {\n                        el.style.overflow = (!isHidden) ? 'hidden' : '';\n                    }\n                }\n            }\n        },\n\n        created() {\n            const $root = this.$root;\n\n            // --- hide dropdown if other dropdowns show\n            // --- or document clicked\n            $root.$on('bp-dropdown:open', () => this.isHidden = true);\n            $root.$on('bp-dropdown:hide', () => this.isHidden = true);\n\n            // --- hide dropdown on document click event\n            if (this.trigger === 'click' && !$root['is-bp-dropdown']) {\n                Object.defineProperty($root, 'is-bp-dropdown', {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: true\n                });\n\n                document.onmousedown = (e) => {\n                    const target = e.target;\n                    const dropdown = target.closest('.bp-dropdown__btn') || target.closest('.bp-dropdown__body');\n\n                    if (!dropdown) {\n                        $root.$emit('bp-dropdown:hide');\n                    }\n                }\n            }\n\n            this.id = 'bp-dropdown-' + this.generateRandomId();\n        },\n\n        methods: {\n            // --- generate random id for query selector\n            generateRandomId() {\n                return Math.random().toString(36).substr(2, 10);\n            },\n\n            _onToggle(e) {\n                if (this.trigger !== 'click') {\n                    return;\n                }\n\n                this.checkCustomCallback(e);\n            },\n\n            _onBtnEnter(e) {\n                if (this.trigger !== 'hover' || !this.isHidden) {\n                    return;\n                }\n\n                this.checkCustomCallback(e);\n            },\n\n            _onBtnLeave(e) {\n                if (this.trigger !== 'hover') {\n                    return;\n                }\n\n                if (this.role) {\n                    this.timeout = setTimeout(() => this.isHidden = true, 100);\n                }\n\n                const to = e.toElement;\n                if (!to) {\n                    return;\n                }\n\n                const isDropdown = to.closest('.bp-dropdown__btn') || to.closest('.bp-dropdown__body');\n                if (isDropdown) {\n                    return;\n                }\n\n                this.prepare();\n            },\n\n            _onBodyClick() {\n                if (this.closeOnClick) {\n                    this.isHidden = true;\n                }\n            },\n\n            _onBodyEnter() {\n                if (this.timeout) {\n                    clearTimeout(this.timeout);\n                }\n            },\n\n            _onBodyLeave(e) {\n                if (this.trigger !== 'hover') {\n                    return;\n                }\n\n                const to = e.toElement;\n                if (!to) {\n                    return;\n                }\n\n                if (to.closest('.bp-dropdown__btn') || to.closest('.bp-dropdown__sub')) {\n                    return;\n                }\n\n                this.prepare();\n            },\n\n            checkCustomCallback(e) {\n                if (!this.isHidden) {\n                    this.prepare();\n                    return;\n                }\n\n                // --- custom callback before open\n                const promise = new Promise(resolve => {\n                    this.isLoading = true;\n                    this.beforeOpen.call(this, resolve);\n                });\n\n                promise.then(() => {\n                    this.isLoading = false;\n                    if (!e.target.closest('.bp-dropdown__body')) {\n                        // --- hide dropdown if other dropdowns show\n                        this.$root.$emit('bp-dropdown:open');\n                    }\n\n                    setTimeout(this.prepare, 0);\n                });\n\n                promise.catch(() => { throw Error('bp-dropdown promise error') });\n            },\n\n            prepare() {\n                this.isHidden = !this.isHidden;\n                if (!this.isHidden) {\n                    this.$nextTick(() => {\n                        const button = this.$el.firstElementChild;\n                        const container = document.getElementById(this.id);\n\n                        this.setWidth(button.offsetWidth);\n                        this.setPosition(button, container);\n                    });\n                }\n            },\n\n            setWidth(width) {\n                this.width = width;\n            },\n\n            setPosition(btn, body) {\n                if (!btn || !body) {\n                    return;\n                }\n\n                const coords = this.getCoords(btn);\n\n                // --- current position\n                const currentTop = coords.top;\n                const currentLeft = coords.left;\n\n                // --- btn size\n                const btnWidth = btn.offsetWidth;\n                const btnHeight = btn.offsetHeight;\n\n                // --- body size\n                const bodyWidth = body.offsetWidth;\n                const bodyHeight = body.offsetHeight;\n\n                switch(this.align) {\n                    case 'top':\n                        this.top = (currentTop + pageYOffset - bodyHeight);\n                        this.left = (currentLeft + pageXOffset);\n                        break;\n                    case 'right':\n                        this.top = (currentTop + pageYOffset);\n                        this.left = (currentLeft + pageXOffset + btnWidth);\n                        break;\n                    case 'bottom':\n                        this.top = (currentTop + pageYOffset + btnHeight);\n                        this.left = (currentLeft + pageXOffset);\n                        break;\n                    case 'left':\n                        this.top = (currentTop + pageYOffset);\n                        this.left = (currentLeft + pageXOffset - bodyWidth);\n                        break;\n                    default:\n                        this.top = (currentTop + pageYOffset + btnHeight);\n                        this.left = (currentLeft + pageXOffset);\n                        break;\n                }\n\n                this.top += this.y;\n                this.left += this.x;\n            },\n\n            getCoords(el) {\n                el = el.getBoundingClientRect();\n                return {\n                    top: el.top - pageYOffset,\n                    left: el.left - pageXOffset\n                };\n            }\n        }\n    }\n</script>\n\n<style>\n    .bp-dropdown--sub {\n        width: 100%;\n    }\n\n    .bp-dropdown--sub .bp-dropdown__btn,\n    .bp-dropdown--sub .bp-dropdown__sub {\n        width: 100%;\n    }\n\n    .bp-dropdown--sub .bp-dropdown__icon {\n        margin-left: auto;\n    }\n\n    .bp-dropdown__btn {\n        display: inline-flex;\n        align-items: center;\n        padding: 3px 5px;\n        border: 1px solid #efefef;\n        cursor: pointer;\n        transition: background-color .1s ease;\n    }\n\n    .bp-dropdown__sub {\n        display: inline-flex;\n        align-items: center;\n    }\n\n    .bp-dropdown__btn--active {\n        background-color: #eee;\n    }\n\n    .bp-dropdown__icon {\n        display: inline-block;\n        width: 15px;\n        height: 15px;\n        overflow: visible;\n        transition: transform .1s ease;\n    }\n\n    .bp-dropdown__icon--spin {\n        width: 12px;\n        height: 12px;\n        animation: spin 2s infinite linear;\n    }\n\n    .bp-dropdown__icon--top {\n        transform: rotate(-180deg);\n    }\n\n    .bp-dropdown__icon--right {\n        transform: rotate(-90deg);\n    }\n\n    .bp-dropdown__icon--bottom {\n        transform: rotate(0);\n    }\n\n    .bp-dropdown__icon--left {\n        transform: rotate(-270deg);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--top,\n    .bp-dropdown__sub--active .bp-dropdown__icon--top {\n        transform: rotate(0);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--right,\n    .bp-dropdown__sub--active .bp-dropdown__icon--right {\n        transform: rotate(-270deg);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--bottom,\n    .bp-dropdown__sub--active .bp-dropdown__icon--bottom {\n        transform: rotate(-180deg);\n    }\n\n    .bp-dropdown__btn--active .bp-dropdown__icon--left,\n    .bp-dropdown__sub--active .bp-dropdown__icon--left {\n        transform: rotate(-90deg);\n    }\n\n    .bp-dropdown__body {\n        position: fixed;\n        top: 0;\n        left: 0;\n        padding: 6px 8px;\n        background-color: #fff;\n        box-shadow: 0 5px 15px -5px rgba(0, 0, 0, .5);\n        z-index: 9999;\n    }\n\n    .fade-enter-active, .fade-leave-active {\n        transition: opacity .1s;\n    }\n\n    .fade-enter, .fade-leave-to {\n        opacity: 0;\n    }\n\n    @keyframes spin {\n        0% {\n            transform:rotate(0)\n        }\n        100% {\n            transform:rotate(360deg)\n        }\n    }\n</style>\n"]}]}