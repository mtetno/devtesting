{"remainingRequest":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Professional\\TestIt\\GrievanceManagement\\src\\pages\\Login1.vue?vue&type=style&index=0&id=ce7114e8&scoped=true&lang=css&","dependencies":[{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\src\\pages\\Login1.vue","mtime":1622909520990},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Professional\\TestIt\\GrievanceManagement\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.login {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  margin-top: 40px;\r\n}\r\n.login-form {\r\n  width: 290px;\r\n}\r\n.forgot-password {\r\n  margin-top: 10px;\r\n}\r\n",{"version":3,"sources":["Login1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login1.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <el-card>\r\n      <h2>Login</h2>\r\n      <el-form\r\n        class=\"login-form\"\r\n        :model=\"model\"\r\n        :rules=\"rules\"\r\n        ref=\"form\"\r\n        @submit.native.prevent=\"login\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"model.username\" placeholder=\"Username\" prefix-icon=\"fas fa-user\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"model.password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            prefix-icon=\"fas fa-lock\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            :loading=\"loading\"\r\n            class=\"login-button\"\r\n            type=\"primary\"\r\n            native-type=\"submit\"\r\n            block\r\n          >Login</el-button>\r\n        </el-form-item>\r\n        <a class=\"forgot-password\" href=\"https://oxfordinformatics.com/\">Forgot password ?</a>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"login\",\r\n  data() {\r\n    return {\r\n      validCredentials: {\r\n        username: \"lightscope\",\r\n        password: \"lightscope\"\r\n      },\r\n      model: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      loading: false,\r\n      rules: {\r\n        username: [\r\n          {\r\n            required: true,\r\n            message: \"Username is required\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            min: 4,\r\n            message: \"Username length should be at least 5 characters\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          { required: true, message: \"Password is required\", trigger: \"blur\" },\r\n          {\r\n            min: 5,\r\n            message: \"Password length should be at least 5 characters\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    simulateLogin() {\r\n      return new Promise(resolve => {\r\n        setTimeout(resolve, 800);\r\n      });\r\n    },\r\n    async login() {\r\n      let valid = await this.$refs.form.validate();\r\n      if (!valid) {\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      await this.simulateLogin();\r\n      this.loading = false;\r\n      if (\r\n        this.model.username === this.validCredentials.username &&\r\n        this.model.password === this.validCredentials.password\r\n      ) {\r\n        this.$message.success(\"Login successfull\");\r\n      } else {\r\n        this.$message.error(\"Username or password is invalid\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.login {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  margin-top: 40px;\r\n}\r\n.login-form {\r\n  width: 290px;\r\n}\r\n.forgot-password {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n$teal: rgb(0, 124, 137);\r\n.el-button--primary {\r\n  background: $teal;\r\n  border-color: $teal;\r\n\r\n  &:hover,\r\n  &.active,\r\n  &:focus {\r\n    background: lighten($teal, 7);\r\n    border-color: lighten($teal, 7);\r\n  }\r\n}\r\n.login .el-input__inner:hover {\r\n  border-color: $teal;\r\n}\r\n.login .el-input__prefix {\r\n  background: rgb(238, 237, 234);\r\n  left: 0;\r\n  height: calc(100% - 2px);\r\n  left: 1px;\r\n  top: 1px;\r\n  border-radius: 3px;\r\n  .el-input__icon {\r\n    width: 30px;\r\n  }\r\n}\r\n.login .el-input input {\r\n  padding-left: 35px;\r\n}\r\n.login .el-card {\r\n  padding-top: 0;\r\n  padding-bottom: 30px;\r\n}\r\nh2 {\r\n  font-family: \"Open Sans\";\r\n  letter-spacing: 1px;\r\n  font-family: Roboto, sans-serif;\r\n  padding-bottom: 20px;\r\n}\r\na {\r\n  color: $teal;\r\n  text-decoration: none;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: lighten($teal, 7);\r\n  }\r\n}\r\n.login .el-card {\r\n  width: 340px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"]}]}